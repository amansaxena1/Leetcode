class Solution {
public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int n = graph.size();
        int ans = 0, mini = n;
        for(auto i:initial){
            queue<int>q;
            vector<int>vis(n,0);
            vis[i] = 1;
            for(auto j:initial){
                if(j == i) continue;
                q.push(j);
                vis[j] = 1;
            }
            int cnt = 0;
            while(q.size()){
                auto ele = q.front();
                q.pop();
                cnt++;
                for(int k=0; k<n; k++) if(ele!=k && graph[ele][k] && !vis[k]){
                    vis[k] = 1;
                    q.push(k);
                }
            }
            // cout<<" ---- "<<i<<" ----- "<< cnt<<"\n";
            if((cnt < mini) || (cnt == mini && ans > i)) {
                mini = cnt;
                ans = i;
            }
        }
        // for(auto i:graph){
        //     for(auto j:i) cout<<j<<" ";
        //     cout<<"\n";
        // }
        return ans;
    }
};